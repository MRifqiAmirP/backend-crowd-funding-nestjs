generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id              String   @id @default(uuid())
  email           String   @unique
  first_name      String   @db.VarChar(50)
  last_name       String?  @db.VarChar(50)
  password        String
  role            String   @db.VarChar(15)
  instance        String   @db.VarChar(100)
  education_level String   @db.VarChar(15)
  email_validated Boolean  @default(false)
  foto_url        String?  @db.VarChar(100)
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt

  projects Project[]

  @@map("users")
}

model Project {
  id               String   @id @default(uuid())
  userId           String
  projectName      String   @db.VarChar(100)
  provider         String   @db.VarChar(100)
  educationLevel   String   @db.VarChar(20)
  institutionName  String   @db.VarChar(100)
  shortDescription String
  fullDescription  String
  aboutProject     String
  target           Int
  deadline         DateTime @db.Date
  thumbnailUrl     String?  @db.VarChar(100)
  createdAt        DateTime @default(now())

  user       User                   @relation(fields: [userId], references: [id])
  galleries  Gallery[]
  categories Mtm_Project_Category[]

  @@map("projects")
}

model Mtm_Project_Category {
  projectId  String
  categoryId String

  project  Project  @relation(fields: [projectId], references: [id])
  category Category @relation(fields: [categoryId], references: [id])

  @@id([projectId, categoryId])
  @@map("mtm_project_category")
}

model Category {
  id            String @id @default(uuid())
  category_name String @unique @db.VarChar(20)

  projects Mtm_Project_Category[]

  @@map("categories")
}

model Gallery {
  id         String   @id @default(uuid())
  projectId  String
  title      String   @db.VarChar(100)
  imageUrl   String   @db.VarChar(200)
  caption    String?  @db.VarChar(255)
  uploadedAt DateTime @default(now())

  project Project @relation(fields: [projectId], references: [id])

  @@map("galleries")
}

model Blog {
  id         String            @id @default(uuid())
  userId     String
  title      String
  slug       String
  content    String
  thumbnail  String
  status     String

  created_at DateTime          @default(now())
  updated_at DateTime          @updatedAt

  categories mtm_Blog_Category[]

  @@map("blogs")
}

model Blog_Category {
  id    String              @id @default(uuid())
  name  String

  blogs mtm_Blog_Category[]

  @@map("blog_categories")
}

model mtm_Blog_Category {
  id         String         @id @default(uuid())
  blogId     String
  categoryId String

  blog       Blog           @relation(fields: [blogId], references: [id])
  category   Blog_Category  @relation(fields: [categoryId], references: [id])

  @@unique([blogId, categoryId])
  @@map("mtm_blog_category")
}